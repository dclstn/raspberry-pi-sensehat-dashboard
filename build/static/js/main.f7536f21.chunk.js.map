{"version":3,"sources":["components/DataCharts.jsx","components/DataPanels.jsx","App.js","index.js"],"names":["DataChart","props","state","data","loading","humidityData","pressureData","temperatureData","dates","this","_fetchData","setInterval","setState","fetch","then","response","status","json","Error","responseJSON","success","splice","transformData","catch","error","Alert","map","each","index","date","Date","getHours","getMinutes","substr","labels","datasets","label","humidity","fill","backgroundColor","temperature","pressure","Panel","bordered","className","React","Component","emailTooltip","temp","Tooltip","Math","floor","DataPanels","fanThreshold","waterThresholdTOP","waterThresholdBOTTOM","emailThreshold","fanSlider","undefined","emailSlider","waterSliderBOTTOM","waterSliderTOP","fan","_updateConfig","console","log","Temperature","Humidity","Pressure","FanStatus","water","WaterStatus","thresholds","waterSlider","waterThreshold","email","top","bottom","updating","body","method","headers","JSON","stringify","List","Item","src","alt","style","color","Whisper","placement","trigger","speaker","Slider","defaultValue","onChange","value","progress","RangeSlider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7536f21.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert, Panel } from 'rsuite';\nimport { Line } from 'react-chartjs-2';\nimport './DataPanels.css'\n\nexport default class DataChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: [],\n        loading: false,\n        humidityData: {},\n        pressureData: {},\n        temperatureData: {},\n        dates: {}\n      };\n    }\n\n    componentWillMount() {\n      this._fetchData();\n      setInterval(() => {\n        this._fetchData();\n      }, 1000 * 60 * 5);\n    }\n\n    _fetchData() {\n        this.setState({loading: true})\n        fetch(`/api/csv`)\n            .then(response => {\n                if (response.status === 200) return response.json()\n                throw new Error(response.json())\n            })\n            .then(responseJSON => {\n                this.setState({\n                    success: true,\n                    data: responseJSON.splice(-20, 20),\n                    loading: false\n                });\n                this.transformData()\n            })\n            .catch(error => {\n                this.setState({\n                    success: false,\n                    loading: false\n                })\n                Alert.error('Failed to fetch from API')\n            })\n    }\n\n    transformData() {\n\n\n      this.setState({dates: this.state.data.map((each, index) => {\n        const date = new Date(each.date * 1);\n        const hours = date.getHours();\n        const minutes = \"0\" + date.getMinutes();\n        const formattedTime = hours + ':' + minutes.substr(-2)\n        return formattedTime;\n        })\n      })\n\n      this.setState({\n        humidityData: {\n          labels: this.state.dates,\n          datasets:[\n            {\n              label: 'Humidity (%)',\n              data: this.state.data.map(each => each.humidity),\n              fill: true,\n              backgroundColor: \"rgba(255, 214, 165, 0.3)\"\n            }\n          ]\n        },\n\n        temperatureData: {\n          labels: this.state.dates,\n          datasets:[\n            {\n              label: 'Temperature (C)',\n              data: this.state.data.map(each => each.temperature),\n              fill: true,\n              backgroundColor: \"rgba(202, 255, 191, 0.3)\"\n            }\n          ],\n        },\n\n        pressureData: {\n          labels: this.state.dates,\n          datasets:[\n            {\n              label: 'Air Pressure (Millibars)',\n              data: this.state.data.map(each => each.pressure),\n              fill: true,\n              backgroundColor: \"rgba(255, 173, 173, 0.3)\"\n            }\n          ]\n        }\n      })\n    }\n\n    render() {\n\n      const { humidityData, pressureData, temperatureData } = this.state;\n\n      return (\n        <Panel bordered className=\"data-list\">\n          <Line data={temperatureData}></Line>\n          <Line data={humidityData}></Line>\n          <Line data={pressureData}></Line>\n        </Panel>\n      );\n    }\n  }","import React from 'react';\nimport { Alert, List, Slider, Tooltip, Whisper, RangeSlider } from 'rsuite';\nimport './DataPanels.css'\n\nconst tempTooltip = (temp) => (\n  <Tooltip>\n    <i>Automatically turn fan on when temperature is above {Math.floor(temp)} C</i>\n  </Tooltip>\n);\n\nconst emailTooltip = (temp) => (\n  <Tooltip>\n    <i>Automatically email me when temperature is above {Math.floor(temp)} C</i>\n  </Tooltip>\n);\n\nconst waterTooltip = (humidity) => (\n  <Tooltip>\n    <i>Automatically turn on water vapor when below {Math.floor(humidity)} %</i>\n  </Tooltip>\n);\n\n\n\nexport default class DataPanels extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        data: [],\n        humidity: 0,\n        pressure: 0,\n        temperature: 0,\n        loading: false,\n        fanThreshold: 50,\n        waterThresholdTOP: 40,\n        waterThresholdBOTTOM: 60,\n        emailThreshold: 50,\n        fanSlider: undefined,\n        emailSlider: undefined,\n        waterSliderBOTTOM: undefined,\n        waterSliderTOP: undefined,\n        fan: 1\n      };\n    }\n\n    componentWillMount() {\n      this._fetchData();\n      setInterval(() => {\n        this._fetchData();\n      }, 5000);\n\n      setInterval(() => {\n        if (this.state.emailSlider !== this.state.emailThreshold \n          || this.state.fanSlider !== this.state.fanThreshold\n          || this.state.waterSliderBOTTOM !== this.state.waterThresholdBOTTOM\n          || this.state.waterSliderTOP !== this.state.waterThresholdTOP) {\n          this._updateConfig(this.state.fanSlider, this.state.emailSlider, this.state.waterSliderTOP, this.state.waterSliderBOTTOM);\n          this._fetchData();\n        }\n      }, 2000)\n    }\n\n    _fetchData() {\n        this.setState({loading: true})\n        fetch(`/api/stats`)\n            .then(response => {\n                if (response.status === 200) return response.json()\n                throw new Error(response.json())\n            })\n            .then(responseJSON => {\n              console.log(responseJSON)\n                this.setState({\n                    success: true,\n                    temperature: responseJSON.Temperature,\n                    humidity: responseJSON.Humidity,\n                    pressure: responseJSON.Pressure,\n                    fan: responseJSON.FanStatus,\n                    water: responseJSON.WaterStatus,\n                    emailThreshold: responseJSON.thresholds.emailThreshold,\n                    fanThreshold: responseJSON.thresholds.fanThreshold,\n                    waterThresholdBOTTOM: responseJSON.thresholds.waterThresholdBOTTOM,\n                    waterThresholdTOP: responseJSON.thresholds.waterThresholdTOP,\n                    emailSlider: this.state.emailSlider || responseJSON.thresholds.emailThreshold,\n                    fanSlider: this.state.fanSlider || responseJSON.thresholds.fanThreshold,\n                    waterSlider: this.state.waterSlider || responseJSON.thresholds.waterThreshold,\n                    data: responseJSON,\n                    loading: false\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    success: false,\n                    loading: false\n                })\n                Alert.error('Failed to fetch from API')\n            })\n    }\n\n\n  _updateConfig(fan, email, top, bottom) {\n    if (this.state.updating === true) return;\n    this.setState({\n      updating: true\n    })\n    const body = {\n      emailThreshold: email,\n      fanThreshold: fan,\n      waterThresholdTOP: top,\n      waterThresholdBOTTOM: bottom,\n    }\n    fetch(`/api/config`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(body)\n        })\n        .then(response => {\n            this.setState({updating: false})\n            if (response.status === 200) return\n            throw new Error(response.json())\n        })\n        .catch(error => {\n          this.setState({updating: false})\n            console.log(error)\n            Alert.error('Failed to fetch from API')\n        })\n  }\n\n    render() {\n      return (\n        <List className=\"data-list\" bordered>\n            <List.Item key={0} index={0}>\n                <div className=\"logo-text\">\n                  <img src=\"/logo256.png\" alt=\"logo\" className=\"logo\"/>\n                  <h2>Pi Dashboard</h2>\n                </div>\n            </List.Item>\n            <List.Item key={1} index={1}>\n                { this.state.success ? ( <p style={{color: 'green'}}>Status: Online</p> ) : ( <p style={{color: 'red'}}>Status: Offline</p> ) }\n            </List.Item>\n            <List.Item key={2} index={2}>\n                { 'Temperature: ' + Math.floor(this.state.temperature) + ' C' }\n            </List.Item>\n            <List.Item key={3} index={3}>\n                { 'Humidity: ' + Math.floor(this.state.humidity) + ' %' }\n            </List.Item>\n            <List.Item key={4} index={4}>\n                { 'Pressure: ' + Math.floor(this.state.pressure) + ' Millibars' }\n            </List.Item>\n            <List.Item key={5} index={5}>\n              <div  className=\"toggle-list\">\n                <div>\n                  { (this.state.fan === 0) ? ( <p style={{color: 'green'}}>Fan Status: Online</p> ) : ( <p style={{color: 'red'}}>Fan Status: Offline</p> ) }\n                </div>\n              </div>\n            </List.Item>\n            <List.Item key={6} index={6}>\n              <div  className=\"toggle-list\">\n                <div>\n                  { (this.state.water === 0) ? ( <p style={{color: 'green'}}>Water Status: Online</p> ) : ( <p style={{color: 'red'}}>Water Status: Offline</p> ) }\n                </div>\n              </div>\n            </List.Item>\n            <List.Item key={7} index={7}>\n              <div className=\"toggle-slider\">\n                <div>\n                <Whisper placement=\"top\" trigger=\"hover\" speaker={tempTooltip(this.state.fanThreshold)}>\n                  <p>Fan Threshold (Temperature)</p>\n                </Whisper>\n                </div>\n                <div>\n                { this.state.success && (<Slider defaultValue={this.state.fanThreshold} onChange={(value) => this.setState({fanSlider: value})} progress></Slider>) }\n                </div>\n              </div>\n            </List.Item>\n            <List.Item key={8} index={8}>\n              <div className=\"toggle-slider\">\n                <div>\n                <Whisper placement=\"top\" trigger=\"hover\" speaker={emailTooltip(this.state.emailThreshold)}>\n                  <p>SMS Threshold (Temperature)</p>\n                </Whisper>\n                </div>\n                <div>\n                { this.state.success && (<Slider defaultValue={this.state.emailThreshold} onChange={(value) => this.setState({emailSlider: value})} progress></Slider>) }\n                </div>\n              </div>\n            </List.Item>\n            <List.Item key={9} index={9}>\n              <div className=\"toggle-slider\">\n                <div>\n                <Whisper placement=\"top\" trigger=\"hover\" speaker={waterTooltip(this.state.waterThreshold)}>\n                  <p>Humidity Threshold</p>\n                </Whisper>\n                </div>\n                <div>\n                { this.state.success && (<RangeSlider defaultValue={[this.state.waterThresholdBOTTOM, this.state.waterThresholdTOP]} onChange={(value) => this.setState({waterSliderBOTTOM: value[0], waterSliderTOP: value[1]})}></RangeSlider>) }\n                </div>\n              </div>\n            </List.Item>\n        </List>\n      );\n    }\n  }","import 'rsuite/dist/styles/rsuite-dark.css';\nimport './App.css';\nimport DataChart from './components/DataCharts'\nimport DataPanels from './components/DataPanels'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <DataPanels></DataPanels>\n        <DataChart></DataChart>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}